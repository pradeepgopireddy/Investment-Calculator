{"ast":null,"code":"var _jsxFileName = \"/home/root1/Practice/01-starting-project/01-starting-project/src/components/Investments/InvestmentList.js\";\nimport classes from './InvestmentList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2\n});\n\n// use like this:\n//   formatter.format(yourValue);\nconst InvestmentList = props => {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: classes.result,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Interest (Year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Interest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Invested Capital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: props.data.map(yearData => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: yearData.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: formatter.format(yearData.savingsEndOfYear)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: formatter.format(yearData.yearlyInterest)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: formatter.format(yearData.savingsEndOfYear - props.initialInvestment - yearData.yearlyContribution * yearData.year)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: formatter.format(props.initialInvestment + yearData.yearlyContribution * yearData.year)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, yearData.year, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = InvestmentList;\nexport default InvestmentList;\nvar _c;\n$RefreshReg$(_c, \"InvestmentList\");","map":{"version":3,"names":["classes","jsxDEV","_jsxDEV","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","InvestmentList","props","className","result","children","fileName","_jsxFileName","lineNumber","columnNumber","data","map","yearData","year","format","savingsEndOfYear","yearlyInterest","initialInvestment","yearlyContribution","_c","$RefreshReg$"],"sources":["/home/root1/Practice/01-starting-project/01-starting-project/src/components/Investments/InvestmentList.js"],"sourcesContent":["import classes from './InvestmentList.module.css';\n\nconst formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n   \n  // use like this:\n//   formatter.format(yourValue);\nconst InvestmentList = (props) => {\n\n    return (\n        \n        <table className={classes.result}>\n            <thead>\n            <tr>\n                <th>Year</th>\n                <th>Total Savings</th>\n                <th>Interest (Year)</th>\n                <th>Total Interest</th>\n                <th>Invested Capital</th>\n            </tr>\n            </thead>\n            <tbody>\n                {props.data.map((yearData) => (\n                    <tr key={yearData.year}>\n                        <td>{yearData.year}</td>\n                        <td>{formatter.format(yearData.savingsEndOfYear)}</td>\n                        <td>{formatter.format(yearData.yearlyInterest)}</td>\n                        <td>{formatter.format(\n                            yearData.savingsEndOfYear - \n                            props.initialInvestment - \n                            yearData.yearlyContribution * yearData.year\n                        )}</td>\n                        <td>{formatter.format(\n                            props.initialInvestment + \n                            yearData.yearlyContribution * yearData.year\n                        )}</td>\n                    </tr>\n                ))}\n            \n            </tbody>\n        </table>\n        \n    )\n}\n\nexport default InvestmentList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}